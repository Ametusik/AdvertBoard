/**
 * AdBoard API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { AdvertDto } from '../model/models';
import { AdvertSearchRequestDto } from '../model/models';
import { ErrorDto } from '../model/models';
import { ShortAdvertDto } from '../model/models';
import { ShortCommentDto } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface AdvertServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * Получить список комментариев объявления
     * 
     * @param id Идентификатор объявления
     */
    advertIdCommentsGet(id: string, extraHttpRequestParams?: any): Observable<Array<ShortCommentDto>>;

    /**
     * Создаёт комментарий по модели в объявлении
     * 
     * @param id Идентификатор объявления
     * @param text Содержимое комментария
     * @param parentId Родитель (если комментарий является ответом на другой комментарий)
     */
    advertIdCommentsPost(id: string, text: string, parentId?: string, extraHttpRequestParams?: any): Observable<ShortCommentDto>;

    /**
     * Удаляет объявление по ID
     * 
     * @param id Идентификатор объявления
     */
    advertIdDelete(id: string, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * Получить объявление по id
     * 
     * @param id Идентификатор объявления
     */
    advertIdGet(id: string, extraHttpRequestParams?: any): Observable<AdvertDto>;

    /**
     * Обновляет объявление по модели
     * 
     * @param id Идентификатор обновляемого объявления
     * @param name Название.
     * @param cost Цена.
     * @param phone Телефон.
     * @param location Геолокация объявления
     * @param categoryId Id категории.
     * @param description Описание.
     * @param images Изображения объявлений
     * @param email Email.
     */
    advertIdPut(id: string, name: string, cost: number, phone: string, location: string, categoryId: string, description?: string, images?: Array<Blob>, email?: string, extraHttpRequestParams?: any): Observable<ShortAdvertDto>;

    /**
     * Создаёт объявление по модели
     * 
     * @param name Название.
     * @param cost Цена.
     * @param phone Телефон.
     * @param location Геолокация объявления
     * @param categoryId Id категории.
     * @param description Описание.
     * @param images Изображения объявлений
     * @param email Email.
     */
    advertPost(name: string, cost: number, phone: string, location: string, categoryId: string, description?: string, images?: Array<Blob>, email?: string, extraHttpRequestParams?: any): Observable<ShortAdvertDto>;

    /**
     * Получить список объявлений
     * 
     * @param advertSearchRequestDto Детали запроса
     */
    advertSearchPost(advertSearchRequestDto?: AdvertSearchRequestDto, extraHttpRequestParams?: any): Observable<Array<ShortAdvertDto>>;

}
